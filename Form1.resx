<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /h/9CPaZ8j3ijAAAAABJRU5ErkJggg==
</value>
  </data>
</root>